{"version":3,"sources":["components/navigation/Navigation.js","components/Logo/brain.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","registerServiceWorker.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","src","brain","ImageLinkForm","onInputChange","onButtonSubmit","type","placeholder","onChange","Rank","name","entries","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","loadUser","this","htmlFor","React","Component","Register","onNameChange","class","for","particlesOptions","Clarifai","App","apiKey","particles","number","density","enable","value_area","initialState","input","route","joined","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","console","log","err","params","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","URL","process","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.96b99fae.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn}) => {\n        if (isSignedIn) {\n            return(\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n            <p onClick={() => onRouteChange(\"signout\")} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\n        </nav>\n            );\n        }\n        else{\n            return(\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n            <p onClick={() => onRouteChange(\"signin\")} className='f3 link dim black underline pa3 pointer'>Sign In</p>\n            <p onClick={() => onRouteChange(\"register\")} className='f3 link dim black underline pa3 pointer'>Register</p>\n        </nav>\n    );\n        }\n}\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/brain.5a66d547.png\";","import React from 'react';\nimport Tilt from 'react-tilt';\nimport './Logo.css'\nimport brain from './brain.png'\nconst Logo = () => {\n    return (\n        <div className=\"ma4 mt0\">\n        <Tilt className=\"Tilt br2 shadow-3\" options={{ max : 60 }} style={{ height: 150, width: 150 }} >\n        <div className=\"Tilt-inner\"> <img src={brain} /> </div>\n        </Tilt>\n        </div>\n    );\n}\nexport default Logo;","import React from 'react';\n\nconst ImageLinkForm = ( {onInputChange, onButtonSubmit} ) => {\n    return(\n        <div>\n            <p className=\"f3\">\n                {'This MB finds faces in your picture))'}\n            </p>\n            <div>\n                <input className=\"f4 br4 pa2 w-70 center\" type=\"tex\" placeholder = 'Put a link to your picture' onChange={onInputChange}/>\n                <button \n                className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple pointer'\n                onClick={onButtonSubmit}\n                >\n                    Detect\n                </button>\n            </div>\n        </div>\n    );\n}\nexport default ImageLinkForm;","import React from 'react';\n\nconst Rank = ({ name, entries }) => {\nreturn (\n    <div>\n    <div className='white f3'>\n        {`${name}, your current entry count is...`}\n    </div>\n    <div className='white f1'>\n        {entries}\n    </div>\n    </div>\n);\n}\n\nexport default Rank;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({imageUrl, box}) => {\n    return (\n        <div className=\"center ma\">\n            <div className=\"absolute mt2\">\n                <img id='inputimage' src={imageUrl} width = '500px' height=\"auto\" />\n            <div className=\"bounding-box\" style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\n            </div>\n        </div>\n    );\n}\nexport default FaceRecognition;","import React from 'react';\n\nclass SignIn extends React.Component {\n        constructor(props) {\n        super(props);\n        this.state = {\n            signInEmail: '',\n            signInPassword: ''\n        }\n        }\n    \n    onEmailChange = (event) => {\n        this.setState({signInEmail: event.target.value})\n    }\n    onPasswordChange = (event) => {\n        this.setState({signInPassword: event.target.value})\n    }\n\n    onSubmitSignIn = () => {\n        fetch('https://boiling-bayou-92452.herokuapp.com/signin', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json', \n                        'Accept': 'application/json'\n        },\n            body: JSON.stringify({\n                email: this.state.signInEmail,\n                password: this.state.signInPassword\n            })\n        })\n        .then(response => response.json())\n        .then(user => {\n            if (user.id){\n                this.props.loadUser(user)\n                this.props.onRouteChange('home');\n            }\n            \n        })\n    }\n\n    render() {const { onRouteChange } = this.props;\n    return (\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n            <main className=\"pa4 black-80\">\n            <div className=\"measure\">\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n                <div className=\"mt3\">\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                    <input\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                    type=\"email\"\n                    name=\"email-address\"\n                    id=\"email-address\"\n                    onChange={this.onEmailChange}\n                    />\n                </div>\n                <div className=\"mv3\">\n                    <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                    <input\n                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    onChange={this.onPasswordChange}\n                    />\n                </div>\n                </fieldset>\n                <div className=\"\">\n                <input\n                    onClick={this.onSubmitSignIn}\n                    className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                    type=\"submit\"\n                    value=\"Sign in\"\n                />\n                </div>\n                <div className=\"lh-copy mt3\">\n                <p  onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\n                </div>\n            </div>\n            </main>\n        </article>\n        );\n    }\n}\nexport default SignIn;","import React from 'react';\n\nclass Register extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            name: '',\n        }\n        }\n        onNameChange = (event) => {\n            this.setState({name: event.target.value})\n        }\n        \n        onEmailChange = (event) => {\n            this.setState({email: event.target.value})\n        }\n        \n        onPasswordChange = (event) => {\n            this.setState({password: event.target.value})\n        }\n\n    onSubmitSignIn = () => {\n        fetch('https://boiling-bayou-92452.herokuapp.com/register', {\n        method: 'post',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({\n            email: this.state.email,\n            password: this.state.password,\n            name: this.state.name\n        })\n        })\n        .then(response => response.json())\n        .then(user => {\n            if (user.id) {\n            this.props.loadUser(user)\n            this.props.onRouteChange('home');\n            }\n        })\n    }\n\n\n    render() {\n        return (\n            <article className=\"br3 ba b--black-10 mv6 w-100 w-50-m w-25-l mw5 center shadow-5\">\n                <main className=\"pa4 black-80\">\n        <div className=\"measure\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0 pointer\">\n            <legend class=\"f1 fw6 ph0 mh0 pointer\">Register</legend>\n            <div class=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" for=\"email-address\">Name</label>\n                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"\n                \n                onChange={this.onNameChange}\n                \n                />\n            </div>\n            <div class=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" for=\"email-address\">Email</label>\n                <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"\n                \n                onChange={this.onEmailChange}\n                \n                />\n            </div>\n            <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" for=\"password\">Password</label>\n                <input \n                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"\n                \n                onChange={this.onPasswordChange}\n                \n                />\n            </div>\n            </fieldset>\n            <div className=\"\">\n            <input \n            onClick={this.onSubmitSignIn}\n            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n            type=\"submit\" \n            value=\"Register\"/>\n            </div>\n            \n        </div>\n        </main>\n        </article>\n        );\n    }\n}\nexport default Register;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai, { COLOR_MODEL } from 'clarifai';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nconst app = new Clarifai.App({\n  apiKey: '5e5773701a044e96b13d77721a05c38b'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 400\n      }\n    }\n  }\n}\n\nconst initialState = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false, \n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n  \n  \n  loadUser = (data) => {\n    this.setState({user:\n      {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n    displayFaceBox = (box) => {\n      this.setState({box: box});\n    }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    fetch('https://boiling-bayou-92452.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n    .then(response => response.json())\n        .then(response => {\n          if (response){\n            fetch('https://boiling-bayou-92452.herokuapp.com/image',{\n              method: 'put',\n            headers: {'Content-Type': 'application/json', 'Accept': 'application/json'},\n            body: JSON.stringify({\n                id: this.state.user.id\n              })\n            })\n            .then(response => response.json())\n            .then(count =>{\n              this.setState(Object.assign(this.state.user, { entries: count}))\n            })\n            .catch(console.log)\n          }\n          this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n        .catch(err => console.log(err));\n    }\n\nonRouteChange = (route) => {\n  if (route === 'signout') {\n    this.setState(initialState)\n  }\n  else if (route === 'home')\n  {\n    this.setState({isSignedIn: true})\n  }\n  this.setState({route: route});\n}\n\n  render() { \n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions}/>\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange = {this.onRouteChange}/>\n        { this.state.route === 'home' \n        ?\n        <div> \n        <Logo />\n          <ImageLinkForm \n          onInputChange = {this.onInputChange} \n          onButtonSubmit={this.onButtonSubmit}/>\n          <Rank\n                name={this.state.user.name}\n                entries={this.state.user.entries}\n              />\n          <FaceRecognition box = {this.state.box} imageUrl = {this.state.imageUrl} />\n          </div>\n          : (\n            this.state.route === 'signin'\n            ?<SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n        }\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n\n"],"sourceRoot":""}