{"version":3,"sources":["components/navigation/Navigation.js","components/Logo/brain.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/FaceRecognition/FaceRecognition.js","components/SignIn/SignIn.js","components/Register/Register.js","App.js","registerServiceWorker.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","src","brain","ImageLinkForm","onInputChange","onButtonSubmit","type","placeholder","onChange","Rank","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","SignIn","class","for","name","value","Register","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","route","params","this","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","URL","process","origin","addEventListener","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0682a13e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn}) => {\n        if (isSignedIn) {\n            return(\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n            <p onClick={() => onRouteChange(\"signout\")} className='f3 link dim black underline pa3 pointer'>Sign Out</p>\n        </nav>\n            );\n        }\n        else{\n            return(\n            <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n            <p onClick={() => onRouteChange(\"signin\")} className='f3 link dim black underline pa3 pointer'>Sign In</p>\n            <p onClick={() => onRouteChange(\"register\")} className='f3 link dim black underline pa3 pointer'>Register</p>\n        </nav>\n    );\n        }\n}\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/brain.5a66d547.png\";","import React from 'react';\nimport Tilt from 'react-tilt';\nimport './Logo.css'\nimport brain from './brain.png'\nconst Logo = () => {\n    return (\n        <div className=\"ma4 mt0\">\n        <Tilt className=\"Tilt br2 shadow-3\" options={{ max : 60 }} style={{ height: 150, width: 150 }} >\n        <div className=\"Tilt-inner\"> <img src={brain} /> </div>\n        </Tilt>\n        </div>\n    );\n}\nexport default Logo;","import React from 'react';\n\nconst ImageLinkForm = ( {onInputChange, onButtonSubmit} ) => {\n    return(\n        <div>\n            <p className=\"f3\">\n                {'This MB finds faces in your picture))'}\n            </p>\n            <div>\n                <input className=\"f4 br4 pa2 w-70 center\" type=\"tex\" placeholder = 'Put a link to your picture' onChange={onInputChange}/>\n                <button \n                className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple pointer'\n                onClick={onButtonSubmit}\n                >\n                    Detect\n                </button>\n            </div>\n        </div>\n    );\n}\nexport default ImageLinkForm;","import React from 'react';\n\nconst Rank = () => {\n    return(\n        <div>\n            <div className='white f3'>\n                {'Your current rank is ...'}\n            </div>\n            <div className='white f1'>\n                {'#1'}\n            </div>\n        </div>\n    );\n}\nexport default Rank;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({imageUrl, box}) => {\n    return (\n        <div className=\"center ma\">\n            <div className=\"absolute mt2\">\n                <img id='inputimage' src={imageUrl} width = '500px' height=\"auto\" />\n            <div className=\"bounding-box\" style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\n            </div>\n        </div>\n    );\n}\nexport default FaceRecognition;","import React from 'react';\n\nconst SignIn = ({ onRouteChange}) => {\n    return (\n        <article className=\"br3 ba b--black-10 mv6 w-100 w-50-m w-25-l mw5 center shadow-5\">\n            <main className=\"pa4 black-80\">\n    <form className=\"measure\">\n        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n        <legend class=\"f1 fw6 ph0 mh0\">Sign In</legend>\n        <div class=\"mt3\">\n            <label className=\"db fw6 lh-copy f6\" for=\"email-address\">Email</label>\n            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\n        </div>\n        <div className=\"mv3\">\n            <label className=\"db fw6 lh-copy f6\" for=\"password\">Password</label>\n            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\n        </div>\n        </fieldset>\n        <div className=\"\">\n        <input \n        onClick={() => onRouteChange(\"home\")}\n        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n        type=\"submit\" \n        value=\"Sign in\"/>\n        </div>\n        <div className=\"lh-copy mt3\">\n        <p onClick={() => onRouteChange(\"register\")} className=\"pointer f6 link dim black db\">Register</p>\n        </div>\n    </form>\n    </main>\n    </article>\n    );\n}\nexport default SignIn;","import React from 'react';\n\nconst Register = ({ onRouteChange}) => {\n    return (\n        <article className=\"br3 ba b--black-10 mv6 w-100 w-50-m w-25-l mw5 center shadow-5\">\n            <main className=\"pa4 black-80\">\n    <form className=\"measure\">\n        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0 pointer\">\n        <legend class=\"f1 fw6 ph0 mh0 pointer\">Register</legend>\n        <div class=\"mt3\">\n            <label className=\"db fw6 lh-copy f6\" for=\"email-address\">Name</label>\n            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\n        </div>\n        <div class=\"mt3\">\n            <label className=\"db fw6 lh-copy f6\" for=\"email-address\">Email</label>\n            <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\n        </div>\n        <div className=\"mv3\">\n            <label className=\"db fw6 lh-copy f6\" for=\"password\">Password</label>\n            <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\n        </div>\n        </fieldset>\n        <div className=\"\">\n        <input \n        onClick={() => onRouteChange(\"home\")}\n        className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n        type=\"submit\" \n        value=\"Register\"/>\n        </div>\n    </form>\n    </main>\n    </article>\n    );\n}\nexport default Register;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai, { COLOR_MODEL } from 'clarifai';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nconst app = new Clarifai.App({\n  apiKey: '5e5773701a044e96b13d77721a05c38b'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 400\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n    displayFaceBox = (box) => {\n      this.setState({box: box});\n    }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    app.models\n    .predict(\n      Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n        .then(response => {\n          this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n  }\n/*\n  .then(response => {\n          this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n*/\nonRouteChange = (route) => {\n  if (route === 'signout') {\n    this.setState({isSignedIn: false})\n  }\n  else if (route === 'home')\n  {\n    this.setState({isSignedIn: true})\n  }\n  this.setState({route: route});\n}\n\n  render() { \n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions}/>\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange = {this.onRouteChange}/>\n        { this.state.route === 'home' \n        ?\n        <div> \n        <Logo />\n          <ImageLinkForm \n          onInputChange = {this.onInputChange} \n          onButtonSubmit={this.onButtonSubmit}/>\n          <Rank />\n          <FaceRecognition box = {this.state.box} imageUrl = {this.state.imageUrl} />\n          </div>\n          : (\n            this.state.route === 'signin'\n            ?<SignIn onRouteChange={this.onRouteChange}/>\n            :<Register onRouteChange={this.onRouteChange}/>\n          )\n        }\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n\n"],"sourceRoot":""}