{"ast":null,"code":"var _jsxFileName = \"/Users/jekaprudnik/Desktop/SmartBrain/MagicBrain/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai, { COLOR_MODEL } from 'clarifai';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: '5e5773701a044e96b13d77721a05c38b'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 400\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch('https://boiling-bayou-92452.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('https://boiling-bayou-92452.herokuapp.com/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      });\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: this.state.isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), this.state.route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          imageUrl: this.state.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this) : this.state.route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 14\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jekaprudnik/Desktop/SmartBrain/MagicBrain/src/App.js"],"names":["React","Component","Particles","Clarifai","COLOR_MODEL","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","SignIn","Register","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai, { COLOR_MODEL } from 'clarifai';\nimport Navigation from './components/navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nconst app = new Clarifai.App({\n  apiKey: '5e5773701a044e96b13d77721a05c38b'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 400\n      }\n    }\n  }\n}\n\nconst initialState = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false, \n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n  \n  \n  loadUser = (data) => {\n    this.setState({user:\n      {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n    }})\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n    displayFaceBox = (box) => {\n      this.setState({box: box});\n    }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    fetch('https://boiling-bayou-92452.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        input: this.state.input\n      })\n    })\n    .then(response => response.json())\n        .then(response => {\n          if (response){\n            fetch('https://boiling-bayou-92452.herokuapp.com/image',{\n              method: 'put',\n            headers: {'Content-Type': 'application/json', 'Accept': 'application/json'},\n            body: JSON.stringify({\n                id: this.state.user.id\n              })\n            })\n            .then(response => response.json())\n            .then(count =>{\n              this.setState(Object.assign(this.state.user, { entries: count}))\n            })\n          }\n          this.displayFaceBox(this.calculateFaceLocation(response))\n        })\n  }\n\nonRouteChange = (route) => {\n  if (route === 'signout') {\n    this.setState(initialState)\n  }\n  else if (route === 'home')\n  {\n    this.setState({isSignedIn: true})\n  }\n  this.setState({route: route});\n}\n\n  render() { \n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions}/>\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange = {this.onRouteChange}/>\n        { this.state.route === 'home' \n        ?\n        <div> \n        <Logo />\n          <ImageLinkForm \n          onInputChange = {this.onInputChange} \n          onButtonSubmit={this.onButtonSubmit}/>\n          <Rank\n                name={this.state.user.name}\n                entries={this.state.user.entries}\n              />\n          <FaceRecognition box = {this.state.box} imageUrl = {this.state.imageUrl} />\n          </div>\n          : (\n            this.state.route === 'signin'\n            ?<SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n        }\n        </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}